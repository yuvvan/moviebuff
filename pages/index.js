import Head from "next/head";
import { BiSearchAlt } from "react-icons/bi";
import { IoIosArrowForward, IoIosArrowBack } from "react-icons/io";
import { Inter } from "next/font/google";
import { Router, useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import SettingsContext from "./SettingsContext";
import { useAuthState } from "react-firebase-hooks/auth";
import { auth, db } from "@/utils/firebase";
import Trendingimage from "@/components/trendingImage";
import FeedCard from "@/components/feedCard";
import {
  addDoc,
  collection,
  limit,
  onSnapshot,
  orderBy,
  query,
  serverTimestamp,
} from "firebase/firestore";

export default function Home() {
  const [user, loading] = useAuthState(auth);
  const router = useRouter();

  const [picURL, setPicURL] = useState("");
  const [title, setTitle] = useState("");
  const [plot, setPlot] = useState("");
  const [ratings, setRatings] = useState("");
  const [favouriteMovies, setFavouriteMovies] = useState([]);

  const [trendingMovies, setTrendingMovies] = useState([]);

  const [inputText, setInputText] = useState("");

  const collectionRef = collection(db, "movies");
  const favouritesRef = collection(db, "favourites");

  const getTrendingMovies = async () => {
    const q = query(collectionRef, orderBy("RATINGS", "desc"));
    const mapMovies = onSnapshot(q, (snapshot) => {
      setTrendingMovies(
        snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }))
      );
    });
    return mapMovies;
  };

  const getFavMovies = async () => {
    const q = query(favouritesRef,orderBy(serverTimestamp));
    const mapFavMovies = onSnapshot(q, (snapshot) => {
        setFavouriteMovies(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))
    });
    return mapFavMovies;
}

  useEffect(() => {
    getTrendingMovies();
  }, []);

  const date = new Date(Date.now());
  const months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ];
  let month = months[date.getMonth()];

  const days = [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
  ];
  let day = days[date.getDay()];

  if (loading) return;
  if (!user) return router.push("/login");

  const logoutHandler = () => {
    auth.signOut();
  };

  const inputHandler = (e) => {
    setInputText(e.target.value);
  };

  // Netflix API
  const apiCallTrending = async (inputText) => {
    fetch(`http://www.omdbapi.com/?t=${inputText}&apikey=edf0a07f&`)
      .then((response) => {
        return response.json();
      })
      .then((data) => {
        setPicURL(data.Poster);
        setTitle(data.Title);
        setPlot(data.Plot);
        setRatings(data.Ratings[0].Value);
      });
    //Firebase CRUD cloud data
    if (title !== "")
      await addDoc(collectionRef, {
        URL: picURL,
        TITLE: title,
        PLOT: plot,
        RATINGS: ratings,
        USER: user.uid,
      });
  };

  const slideLeft = () => {
    var slider = document.getElementById("slider");
    slider.scrollLeft = slider.scrollLeft - 400;
  };

  const sliderRight = () => {
    var slider = document.getElementById("slider");
    slider.scrollLeft = slider.scrollLeft + 400;
  };

  return (
    <>
      <Head>
        <title>Movie Buff</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="mx-auto text-white">
          <div className="flex items-center justify-center px-20 my-12 gap-4">
            <input
              className="min-w-max block w-3/5 px-4 py-2 text-purple-700 bg-white border rounded-full focus:border-purple-400 focus:ring-purple-300 focus:outline-none focus:ring focus:ring-opacity-40"
              placeholder="Search"
              value={inputText}
              onChange={inputHandler}
            />

            <button
              className="p-3 text-white bg-purple-600 rounded-full"
              onClick={() => apiCallTrending(inputText)}
            >
              <BiSearchAlt className="bg-transparent text-xl" />
            </button>
          </div>
          <div className="mx-auto min-w-max w-3/5 flex items-center justify-between">
            <div>
              <h3 className="font-arimo">
                {month.slice(0, 3) +
                  " " +
                  date.getDate() +
                  ", " +
                  day.slice(0, 3)}
              </h3>
              <h1 className="font-arimo text-3xl">Today</h1>
            </div>
            <div>
              <img
                src={user.photoURL}
                alt={user.email}
                onClick={() => router.push("/profile")}
                className="rounded-full w-12 h-12 cursor-pointer"
              />
            </div>
          </div>
          <div className="text-white text-3xl flex justify-center items-center font-arimo mt-10">
            My Feed
          </div>

          <FeedCard/>



          <div className="text-white text-3xl flex justify-center items-center font-arimo mt-10">
            Trending
          </div>
          <div
            id="slider"
            className="w-full overflow-x-scroll scroll whitespace-nowrap scroll-smooth scrollbar-hide"
          >
            <div className="relative flex items-center">
              <IoIosArrowBack
                onClick={slideLeft}
                className="text-white left-0 fixed z-10 opacity-50 cursor-pointer hover:opacity-100"
                size={40}
              />
              {trendingMovies.map((eachMovie) => (
                <Trendingimage
                  key={eachMovie.id}
                  {...eachMovie}
                ></Trendingimage>
              ))}
              <IoIosArrowForward
                onClick={sliderRight}
                className="text-white fixed z-10 right-0 opacity-50 cursor-pointer hover:opacity-100"
                size={40}
              />
            </div>
          </div>

          <div className="mx-auto flex flex-col justify-center w-32">
            <button
              onClick={logoutHandler}
              className="text-white bg-purple-600 text-lg rounded-2xl p-3"
            >
              Logout
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
